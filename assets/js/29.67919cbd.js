(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{195:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"react"}},[t._v("React")]),t._v(" "),e("h3",{attrs:{id:"_1-react-的-key-的作用以及实现原理，并设定一个具体情境进行分析"}},[t._v("1.react 的 key 的作用以及实现原理，并设定一个具体情境进行分析")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("例如有这样的代码：")]),t._v(" "),t._m(2),e("h3",{attrs:{id:"_2-react-里什么时候用-context？"}},[t._v("2.React 里什么时候用 Context？")]),t._v(" "),e("h3",{attrs:{id:"_3-reader-props-是什么？-什么时候用？"}},[t._v("3.reader props 是什么？ 什么时候用？")]),t._v(" "),e("h3",{attrs:{id:"_4-路由如何做权限校验？"}},[t._v("4.路由如何做权限校验？")]),t._v(" "),e("h3",{attrs:{id:"_5-如何正确理解-react-的生命周期？"}},[t._v("5.如何正确理解 React 的生命周期？")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/",target:"_blank",rel:"noopener noreferrer"}},[t._v("可以参考这个图"),e("OutboundLink")],1)]),t._v(" "),e("img",{attrs:{src:"https://raw.githubusercontent.com/AlvinMi/2019-Pic/master/2019/20190504011403.png"}}),t._v(" "),e("p",[t._v("每个 React 组件都会经历挂载(Mounting)、更新(Updating)、和卸载(Unmounting)的过程。")]),t._v(" "),e("p",[t._v("React 每个过程都提供一些钩子函数，让我们可以自定义一些事情。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),e("h3",{attrs:{id:"_6-pure-component-和-shouldcomponentupdate-相关概念的考察？"}},[t._v("6.pure-component 和 shouldComponentUpdate 相关概念的考察？")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),e("p",[t._v("可以判断当前的 State 和之前的 State，当前的 props 和之前的 props 是否有变化，如果没有变化，它会自动阻止 React 去重新更新。")]),t._v(" "),e("h3",{attrs:{id:"_7-组件生命周期？"}},[t._v("7.组件生命周期？")]),t._v(" "),e("h3",{attrs:{id:"_8-react-在什么时候比较适合做-ssr？"}},[t._v("8.React 在什么时候比较适合做 SSR？")]),t._v(" "),e("p",[t._v("React 在有 Node 做中间层的时候比较适合做 SSR，另一方面需要看业务，如果网站需要 SEO，那么就需要做 SSR。后台系统、WebAPP 倒不需要 SSR。")]),t._v(" "),e("h3",{attrs:{id:"_9-react-的-diff-算法基本原理与源码解释"}},[t._v("9.react 的 diff 算法基本原理与源码解释?")]),t._v(" "),e("h3",{attrs:{id:"_10-如何细粒度地控制-react-组件更新"}},[t._v("10.如何细粒度地控制 react 组件更新?")]),t._v(" "),e("h3",{attrs:{id:"_11-js-的基本函数式使用，比如-reduce、curry"}},[t._v("11.JS 的基本函数式使用，比如 reduce、curry?")]),t._v(" "),e("h3",{attrs:{id:"_12-对-redux-和-mobx-的「设计理念」理解？"}},[t._v("12.对 Redux 和 Mobx 的「设计理念」理解？")]),t._v(" "),e("h3",{attrs:{id:"_13-virtual-dom-的基本原理与简单的源码解释？"}},[t._v("13.virtual-dom 的基本原理与简单的源码解释？")]),t._v(" "),e("h3",{attrs:{id:"_14-你认为-react-有什么应该-deprecate-的特性"}},[t._v("14.你认为 React 有什么应该 deprecate 的特性?")]),t._v(" "),e("h3",{attrs:{id:"_15-聊一聊怎么改良一个-react-的数据流-lib-吗-哈哈哈，在知乎上看到这题。-ಥ-ಥ"}},[t._v("15.聊一聊怎么改良一个 React 的数据流 lib 吗? (哈哈哈，在知乎上看到这题。(ಥ_ಥ))")]),t._v(" "),e("h3",{attrs:{id:"_16-react-component-purecomponent-的区别？"}},[t._v("16.React Component & PureComponent 的区别？")]),t._v(" "),e("h3",{attrs:{id:"_17-props-state"}},[t._v("17.props & state?")]),t._v(" "),e("h3",{attrs:{id:"_18-什么时候可以-直接修改-state-的值？"}},[t._v("18.什么时候可以[直接修改] state 的值？")]),t._v(" "),t._m(20),t._v(" "),e("h3",{attrs:{id:"_19"}},[t._v("19.")]),t._v(" "),e("h3",{attrs:{id:"约定"}},[t._v("约定")]),t._v(" "),e("p",[t._v("创建组件的单一职责原则：")]),t._v(" "),t._m(21),t._v(" "),e("h2",{attrs:{id:"组件模式"}},[t._v("组件模式")]),t._v(" "),e("p",[t._v("有状态组件-无状态组件、容器组件-展示组件、高阶组件-渲染回调(函数作为子组件)")]),t._v(" "),e("h2",{attrs:{id:"react-redux"}},[t._v("React Redux")]),t._v(" "),e("p",[t._v("Redux 并不是必须的，只是良好的解决了状态管理，减少维护时候的 bug。")]),t._v(" "),e("img",{attrs:{src:"https://raw.githubusercontent.com/AlvinMi/2019-Pic/master/2019/20190504202756.png"}}),t._v(" "),t._m(22),t._v(" "),e("p",[t._v("Redux 让组件通信变得更加容易。")]),t._v(" "),e("p",[t._v("Redux 特性：")]),t._v(" "),t._m(23),t._v(" "),t._m(24),e("p",[t._v("React & Redux 是如何配置的？ react-redux 提供了 connect 和 Provider，一个将组件与 redux 关联起来，一个将 store 传递给组件。组件通过 dispatch 发出的 action，store 根据 action 的 type 属性调用对应的 reducer 并传入 setState 更新组件，组件的 props 也就跟随变化了。")]),t._v(" "),e("p",[t._v("Redux 主要由三部分组成： store、action reducer。")]),t._v(" "),t._m(25),t._v(" "),t._m(26),e("p",[t._v("1.getState()")]),t._v(" "),e("p",[t._v("获取 store 中的 state, 用 action 触发 reducer 改变 state 时，需要再拿到新的 state 里的数据，毕竟数据才是我们想要的。")]),t._v(" "),e("p",[t._v("getState 主要在两个地方需要用到：")]),t._v(" "),t._m(27),t._v(" "),e("p",[t._v("2.dispatch(action)")]),t._v(" "),e("p",[t._v("例如 UI 上当用户点击一个 button 的时候就产生了一个 action，store 就把它 dispatch 出去，dispatch 给 reducer。")]),t._v(" "),e("p",[t._v("在 createStore 中可以用 middleware 中间件对 dispatch 进行改造，比如当 action 传入 dispatch 会立即触发 reducer，有些时候我们不希望它立即触发，而是等待异步操作完成之后再触发，这时候用 redux-thunk 对 dispatch 进行改造，以前只能传入一个对象，改造完成后可以传入一个函数，在这个函数里我们手动 dispatch 一个 action 对象，这个过程是可控的，就实现了异步")]),t._v(" "),e("p",[t._v("3.subscribe(listener)")]),t._v(" "),e("p",[t._v("监听 store 的变化，在 store 调用 dispatch 时会注册一个 listener 监听 state 变化。")]),t._v(" "),e("p",[t._v("4.replaceReducer(nextReducer)")]),t._v(" "),e("p",[t._v("替换 reducer，改变 state 修改的逻辑。")]),t._v(" "),t._m(28),t._v(" "),e("p",[t._v("action 可以使用 actionCreator 进行创造, dispatch 就是把 action 对象发送出去。")]),t._v(" "),t._m(29),t._v(" "),e("p",[t._v("根据 action 的 type 返回一个新的 state。")]),t._v(" "),e("p",[t._v("根据业务逻辑可以分成多个 reducer, 然后通过 combineReducers 将它们合并， state 树中有很多对象，每个 state 对象对应一个 reducer， state 对象的名字可以在合并时定义。如下：")]),t._v(" "),t._m(30),t._m(31),t._v(" "),e("p",[t._v("最终是一个封装过的函数，其实也是一个 reducer，接收整个 state 和 一个 action，然后将整个 state 拆分发送给对应的 reducer 进行处理，所有的 reducer 会收到相同的 action，不过它们会根据 action 的 type 进行判断，有这个 type 就进行处理然后返回新的 state，没有就返回默认值，然后这些分散的 state 又会被整合在一起返回一个新的 state 树。")]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),e("p",[t._v("也是一个工具函数，帮助我们方便的去使用 action.")]),t._v(" "),e("p",[t._v("分析一下整体的流程如下：")]),t._v(" "),t._m(34),t._v(" "),e("h3",{attrs:{id:"react-redux-2"}},[t._v("React-Redux")]),t._v(" "),e("p",[t._v("如果只使用 redux，流程是这样的：")]),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),e("p",[t._v("Provider 是一个组件，它接受 store 作为 props，然后通过 context 往下传，这样 react 中任何组件都可以通过 context 获取 store。")]),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),e("p",[t._v("完整的写法：")]),t._v(" "),t._m(42),e("p",[t._v("mapStateToProps(state, [ownProps]):")]),t._v(" "),e("p",[t._v("mapDispatchToProps(dispatch, [ownProps]):")]),t._v(" "),e("p",[t._v("mergeProps(stateProps, dispatchProps, ownProps):")]),t._v(" "),e("p",[t._v("options:")]),t._v(" "),e("h3",{attrs:{id:"_1-react-redux-怎么处理多线程文档，管理多个请求并发的问题？"}},[t._v("1.React Redux 怎么处理多线程文档，管理多个请求并发的问题？")]),t._v(" "),e("p",[t._v("JS 是单线程的，但是可以做到请求并发，如果想要多个请求都返回时才处理，可以使用 Promise.all")]),t._v(" "),e("h4",{attrs:{id:"_1-1-如何看待用-worker-的方式启动新线程-var-worker-new-worker-js-file-path-？"}},[t._v("1.1.如何看待用 worker 的方式启动新线程(var worker = new Worker(js file path))？")]),t._v(" "),t._m(43),t._v(" "),e("h3",{attrs:{id:"_2-数据状态管理：-dry-don-t-repeat-yourself-原则"}},[t._v("2.数据状态管理： DRY(Don't Repeat Yourself) 原则")]),t._v(" "),t._m(44),t._v(" "),e("h2",{attrs:{id:"immutable"}},[t._v("immutable")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),e("h2",{attrs:{id:"集成第三方-js-库的技术要点"}},[t._v("集成第三方 JS 库的技术要点")]),t._v(" "),t._m(49)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("React 可以具有一个特殊的属性 "),s("code",[this._v("key")]),this._v("，这个属性不是给用户自己用的，而是给 React 自己用的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果动态创建一个 React 元素，而且 React 元素内包含数量或顺序不确定的子元素时，就需要提供 "),s("code",[this._v("key")]),this._v(" 这个特殊的属性。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("userList")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h3"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("用户列表"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h3"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("users"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("u")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("u"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("u"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有提供 key")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("constructor")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.用于初始化内部状态")]),this._v(" "),s("li",[this._v("2.唯一可以直接修改 State 的地方")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("getDerivedStateFromProps")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.当 State 需要从 props 初始化时使用")]),this._v(" "),s("li",[this._v("2.尽量不要使用：维护两者状态一致性会增加复杂度(可以通过计算获得，不用单独存储，不然就得维护两者的一致性)")]),this._v(" "),s("li",[this._v("3.每次 render 都会调用")]),this._v(" "),s("li",[this._v("4.典型场景：表单控件获取默认值")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("componentDidMount")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.UI 渲染完成后调用")]),this._v(" "),s("li",[this._v("2.只执行一次")]),this._v(" "),s("li",[this._v("3.典型场景：获取外部资源")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("componentWillUnmount")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.组件移除时被调用")]),this._v(" "),s("li",[this._v("2.典型场景: 资源释放")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("getSnapshotBeforeUpdate")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.在页面 render 之前调用，State 已更新")]),this._v(" "),s("li",[this._v("2.典型场景：获取 render 之前的 DOM 状态")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("componentDidUpdate")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.每次 UI 更新时被调用")]),this._v(" "),s("li",[this._v("2.典型场景：页面需要根据 props 变化重新获取数据")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("△shouldComponentUpdate")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.决定 VirtualDOM 是否要重绘")]),this._v(" "),s("li",[this._v("2.一般可以由 "),s("strong",[this._v("PureCommont")]),this._v(" 自动实现")]),this._v(" "),s("li",[this._v("3.典型场景：性能优化")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("shouldComponentUpdate")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.决定 Virtual DOM 是否需要重绘")]),this._v(" "),s("li",[this._v("2.一般可以由 "),s("code",[this._v("PureComponent")]),this._v(" 自动实现")]),this._v(" "),s("li",[this._v("3.典型场景：性能优化")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("pure-component")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Constructor 里面修改，一般来说要更新 state 都会使用 "),s("code",[this._v("setState")]),this._v(" 方法， Constructor 里面什么事情都还没有做，可以使用 "),s("code",[this._v('this.state.xxx = "xxx"')]),this._v(" 这样的形式修改，这也是唯一可以直接修改 State 的方法。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("p",[t._v("1.每个组件只做一件事")])]),t._v(" "),e("li",[e("p",[t._v("2.如果组件变得复杂，那么应该拆分成小组件")])]),t._v(" "),e("li",[e("p",[t._v("React 认为小写的 tag 是原生 DOM 节点，如 "),e("code",[t._v("div")]),t._v(";")])]),t._v(" "),e("li",[e("p",[t._v("大写字母开头为自定义组件；")])]),t._v(" "),e("li",[e("p",[t._v("JSX 标记可以直接使用属性语法，例如 "),e("code",[t._v("<menu.Item/>")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("题图来自 https://css-tricks.com/learning-react-redux/")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.Single Source of Truth，所有的状态都放在唯一的 store 中")]),this._v(" "),s("li",[this._v("2.可预测性： State + action = new State")]),this._v(" "),s("li",[this._v("3.纯函数更新 Stroe")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("todos")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("stete "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_TODO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" completed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TOGGLE_TODO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state.map 生成了一个新的对象")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("todo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n          action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" index\n            "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" todo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" completed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("todo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("completed "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" todo\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("store")]),this._v(" 是一个对象，主要有 4 个方法：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 产生一个 store 只需要 createStore")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" store "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("todoApp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("一是在 dispatch 拿到 action 后 store 需要用它来获取 state 里的数据，并把这个数据传给 reducer，这个过程是自动执行的")]),this._v(" "),s("li",[this._v("二是在我们利用 subscribe 监听到 state 发生变化后调用它来获取新的 state 数据，如果做到这一步，说明我们已经成功了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("action")]),this._v(", 是一个对象，其中 type 属性是必须的，同时可以传入一些数据。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("reducer")]),this._v(", 是一个函数，接收两个参数。一个 state 和一个 action。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reducer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("combineReducers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" doSomethingWithA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" processB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" c\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("combineReducers")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("React 的 state 和 redux 的 state 两者完全是没有关系的，只是名字一样。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("bindActionCreators")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("先调用 store.dispatch 将 action 作为参数传入，同时用 getState 获取当前的状态树 state 并注册 subscribe 的 listener 监听 state 变化，再调用 combineReducers 并将获取的 state 和 action 传入。 combineReducers 会将传入的 state 和 action 传给所有 reducer，并根据 action 的 type 返回新的 state，触发 state 树的更新，我们调用 subscribe 监听到 state 发生变化后用 getState 获取新的 state 数据。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("component --\x3e dispatch(action) --\x3e reducer --\x3e subscribe --\x3e getState --\x3e component")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("用了 "),s("code",[this._v("react-redux")]),this._v(" 之后流程就是这样的：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("component --\x3e actionCreator(data) --\x3e reducer --\x3e component")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("这样 store 的三大功能："),e("code",[t._v("dispatch")]),t._v("，"),e("code",[t._v("subscribe")]),t._v("，"),e("code",[t._v("getState")]),t._v(" 都不需要手动来写了。"),e("code",[t._v("react-redux")]),t._v(" 帮我们做了这些，同时它提供了两个好基友 Provider 和 connect 。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Provider")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("connect")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("connect(mapStateToProps, mapDispatchToProps, mergeProps, options) 是一个函数，它接受四个参数并且再返回一个函数, "),s("code",[this._v("wrapWithConnect")]),this._v("，"),s("code",[this._v("wrapWithConnect")]),this._v(" 接受一个组件作为参数 "),s("code",[this._v("wrapWithConnect(component)")]),this._v("，它内部定义一个新组件 Connect (容器组件) 并将传入的组件 (ui 组件) 作为 Connect 的子组件然后 return 出去。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 高阶函数的形式")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapStateToProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mapDispatchToProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mergeProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在有密集计算，又不希望卡主线程的情况下，原来只能用 "),s("code",[this._v("setTimeout")]),this._v(" 分片，现在可以用 worker 了，有实际使用场景下非常棒。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.能计算得到的状态就不要单独存储")]),this._v(" "),s("li",[this._v("2.组件尽量无状态，所需数据通过 props 获取")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("缺点")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.API 风格易与原生对象搞混淆")]),this._v(" "),s("li",[this._v("2.用第三方组件的时候, 需要使用 "),s("code",[this._v("toJS()")]),this._v("、"),s("code",[this._v("fromJS()")]),this._v(" 方法，在原生和 immutable 对象之间互相转换")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("优势")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.比较引用即深度比较，极大的方便了在 SCU(shouldComponentUpdate) 中进行性能优化")]),this._v(" "),s("li",[this._v("2.防止不小心直接改变一些按引用传递的数据结构造成的 bug")]),this._v(" "),s("li",[this._v("3.节省内存")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1.使用 ref 获取原生 DOM 节点引用？")]),this._v(" "),s("li",[this._v("2.手动将组件状态更新到 DOM 节点？")]),this._v(" "),s("li",[this._v("3.组件销毁时移除原生节点 DOM 事件？")])])}],!1,null,null,null);s.default=n.exports}}]);